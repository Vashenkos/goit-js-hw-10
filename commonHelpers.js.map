{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst dateTimePicker = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('button[data-start]');\nconst daysValue = document.querySelector('[data-days]');\nconst hoursValue = document.querySelector('[data-hours]');\nconst minutesValue = document.querySelector('[data-minutes]');\nconst secondsValue = document.querySelector('[data-seconds]');\n\nlet userSelectedDate;\nlet timerInterval;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n  },\n};\n\n// const options = {\n//   enableTime: true,\n//   time_24hr: true,\n//   defaultDate: new Date(),\n//   minuteIncrement: 1,\n//   onClose(selectedDates) {\n//     userSelectedDate = selectedDates[0];\n//     if (userSelectedDate <= new Date()) {\n//       iziToast.error({\n//         title: 'Error',\n//         message: 'Please choose a date in the future',\n//         position: 'topRight',\n//       });\n//       startButton.disabled = true;\n//     } else {\n//       startButton.disabled = false;\n//     }\n//   },\n// };\n\n// flatpickr(dateTimePicker, options);\n\n// startButton.addEventListener('click', () => {\n//   startButton.disabled = true;\n//   dateTimePicker.disabled = true;\n//   timerInterval = setInterval(updateTimer, 1000);\n// });\n\n// function updateTimer() {\n//   const now = new Date();\n//   const timeRemaining = userSelectedDate - now;\n\n//   if (timeRemaining <= 0) {\n//     clearInterval(timerInterval);\n//     dateTimePicker.disabled = false;\n//     return;\n//   }\n\n//   const timeComponents = convertMs(timeRemaining);\n//   updateInterface(timeComponents);\n// }\n\n// function updateInterface({ days, hours, minutes, seconds }) {\n//   daysValue.textContent = addLeadingZero(days);\n//   hoursValue.textContent = addLeadingZero(hours);\n//   minutesValue.textContent = addLeadingZero(minutes);\n//   secondsValue.textContent = addLeadingZero(seconds);\n// }\n\n// function addLeadingZero(value) {\n//   return String(value).padStart(2, '0');\n// }\n\n// function convertMs(ms) {\n//   const second = 1000;\n//   const minute = second * 60;\n//   const hour = minute * 60;\n//   const day = hour * 24;\n\n//   const days = Math.floor(ms / day);\n//   const hours = Math.floor((ms % day) / hour);\n//   const minutes = Math.floor(((ms % day) % hour) / minute);\n//   const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n//   return { days, hours, minutes, seconds };\n// }\n"],"names":[],"mappings":"wFAKuB,SAAS,cAAc,kBAAkB,EAC5C,SAAS,cAAc,oBAAoB,EAC7C,SAAS,cAAc,aAAa,EACnC,SAAS,cAAc,cAAc,EACnC,SAAS,cAAc,gBAAgB,EACvC,SAAS,cAAc,gBAAgB"}